# Base service options

## The hostname that should be used for requests and notifications 
voms.hostname = $hostname

## Should the registration service be enabled?
voms.registration.enabled = $enable_registration

## Readonly VOMS instance
voms.readonly = $read_only

# VOMS X.509 certificate and trust-anchors settings

## The service PEM encoded X.509 certificate  
voms.service.cert = $cert

## The service private key
voms.service.key = $key

## Which files should VOMS Admin consider as trust anchors
voms.trust_anchors.dir = $trust_dir

# How ofter trust anchors are refreshed from the trust anchors dir inside
# the VOMS database (in seconds) 
voms.trust_anchors.refresh_period = $trust_refresh_period

# VOMS notification settings 

## Disable the notification service. No notifications will be sent
## from this voms-admin instance
voms.notification.disable = $disable_notification

## The email address that will be used as the sender for VOMS Admin notification messages.  
voms.notification.email-address = $mail_from

## The SMTP server
voms.notification.smtp-server = $smtp_host

## SMTP authentication settings
voms.notification.username = $notification_username
voms.notification.password = $notification_password
voms.notification.use_tls = $notification_use_tls

## Membership Validation options

## Period for the membership check background thread (in seconds).
voms.task.membership_check.period =  $membership_check_period

## Default VO membership lifetime duration (in months).
## This setting is used to compute the default membership expiration date
## for newly created users.
voms.membership.default_lifetime = $membership_default_lifetime

## Warning period duration (in days). VOMS Admin will notify of 
## users about to expire in the next number of days expressed by 
## this configuration option.  
voms.membership.expiration_warning_period = $membership_expiration_warning_period

## Membership expiration grace period (in days). In the grace period
## the user will be maintained active even if its membership has expired.
## Note that this option has no effect if the voms.preserve_expired_members
## option is set to true.
voms.membership.expiration_grace_period = $membership_expiration_grace_period

## Time (in days) that should pass between consecutive warning expiration messages sent
## to VO administrators to inform about expired and expiring VO members.
## Note that state about sent notifications is not stored in the database, so the counting
## is zeroed at every service restart.
voms.membership.notification_resend_period = $membership_notification_resend_period

## When this option value is true, expired users are NOT suspended.
## VO administrators are always notified of expired and about to expire
## members via mail.
voms.preserve_expired_members = $preserve_expired_members

## This flag disables the membership end time checks completely.
## Turn this setting to true in case you want that user membership 
## lifetime is linked only to the AUP acceptance period.  
voms.disable_membership_end_time = $disable_membership_end_time

## VOMS registration service options

## Enable attribute request at registration time. Setting this option to true
## will allow users to request membership in groups also when first registering
## at the VO. The VO manager will be given the chance to approve every membership
## request.
voms.request.vo_membership.enable_attribute_requests = $enable_attribute_requests

## Require group manager selection at registration time. When group managers are
## enabled, should the service require that an applican selects one of the 
## managers at registration time?
voms.request.vo_membership.require_group_manager_selection = $require_group_manager_selection

## Time (in seconds) that unconfirmed membership requests are kept
## inside the voms database.
voms.request.vo_membership.lifetime = $membership_request_lifetime

## Should voms-admin send a warning email to the user when
## his/her uncorfimed request is removed from the database?
voms.request.vo_membership.warn_when_expired = $membership_request_warn_when_expired

## Should voms-admin generate gridmapfiles that encode the
## email part of the DN using the "emailAddress" format in addition
## to the "Email=" format used by default?
voms.mkgridmap.translate_dn_email_format = $mkgridmap_translate_email

## AUP options
voms.aup.initial_url =  $aup_url

## The time (in days) given to users to sign the AUP, after being notified, before being suspended.
voms.aup.sign_aup_task_lifetime = $aup_signature_grace_period

## Comma-separated list of instants (in days) before the AUP task expiration 
## when reminders must be sent to users that have been requested to sign the AUP.
## Example: 
## "7,3,1" will send three reminders to users with pending sign AUP tasks, one
## 7 days, 3 days and 1 day before the task expiration, i.e. before the user 
## is suspended
voms.aup.sign_aup_task_reminders = $aup_reminders

## Attribute authority options

## Activate VOMS x.509 attribute authority 
voms.aa.x509.activate_endpoint = $enable_x509_aa

## The legacy X.509 attribute authority port. When greater than zero
## an additional connector (besides the voms webapp one) will be configured 
## to serve legacy request.
voms.aa.x509.additional_port = $x509_aa_port

## The maximum validity (in hours) of the AC issued by this attribute 
## authority
voms.aa.x509.maximum-ac-validity = $ac_validity

## Should the voms-admin AA encode FQANs using the legacy (deprecated) format
## including /Role=NULL/Capability=NULL? 
voms.aa.x509.legacy_fqan_encoding = $legacy_fqan_encoding

## Should the VOMS SAML service be enabled? 
voms.aa.activate_saml_endpoint = $enable_saml

## The lifetime of issued SAML assertion (in seconds)
voms.saml.max_assertion_lifetime = $saml_lifetime

## VOMS compulsory group membership setting. 
## Set this to false to have a standard SAML AA behaviour.
voms.aa.compulsory_group_membership = $compulsory_group_membership

## CSRF guard. When true, dubious requests are not blocked but logged. 
voms.csrf.log_only = $csrf_log_only

## Skip CA checks when authenticating clients
voms.skip_ca_check = $admin_skip_ca_check

#### Add other options after this line
